//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace courseMachineUi.permissionReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="permissionClass", Namespace="http://schemas.datacontract.org/2004/07/courseBackGround.permission")]
    [System.SerializableAttribute()]
    public partial class permissionClass : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid courseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime createdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private courseMachineUi.permissionReference.permissionType[] permissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid permissionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid userIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid courseId {
            get {
                return this.courseIdField;
            }
            set {
                if ((this.courseIdField.Equals(value) != true)) {
                    this.courseIdField = value;
                    this.RaisePropertyChanged("courseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime created {
            get {
                return this.createdField;
            }
            set {
                if ((this.createdField.Equals(value) != true)) {
                    this.createdField = value;
                    this.RaisePropertyChanged("created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public courseMachineUi.permissionReference.permissionType[] permission {
            get {
                return this.permissionField;
            }
            set {
                if ((object.ReferenceEquals(this.permissionField, value) != true)) {
                    this.permissionField = value;
                    this.RaisePropertyChanged("permission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid permissionId {
            get {
                return this.permissionIdField;
            }
            set {
                if ((this.permissionIdField.Equals(value) != true)) {
                    this.permissionIdField = value;
                    this.RaisePropertyChanged("permissionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid userId {
            get {
                return this.userIdField;
            }
            set {
                if ((this.userIdField.Equals(value) != true)) {
                    this.userIdField = value;
                    this.RaisePropertyChanged("userId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="permissionType", Namespace="http://schemas.datacontract.org/2004/07/courseBackGround.permission")]
    [System.SerializableAttribute()]
    public partial class permissionType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid commonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime createdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid creatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool modifyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool readField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool suggestModifyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid commonId {
            get {
                return this.commonIdField;
            }
            set {
                if ((this.commonIdField.Equals(value) != true)) {
                    this.commonIdField = value;
                    this.RaisePropertyChanged("commonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime created {
            get {
                return this.createdField;
            }
            set {
                if ((this.createdField.Equals(value) != true)) {
                    this.createdField = value;
                    this.RaisePropertyChanged("created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid creator {
            get {
                return this.creatorField;
            }
            set {
                if ((this.creatorField.Equals(value) != true)) {
                    this.creatorField = value;
                    this.RaisePropertyChanged("creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool modify {
            get {
                return this.modifyField;
            }
            set {
                if ((this.modifyField.Equals(value) != true)) {
                    this.modifyField = value;
                    this.RaisePropertyChanged("modify");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool read {
            get {
                return this.readField;
            }
            set {
                if ((this.readField.Equals(value) != true)) {
                    this.readField = value;
                    this.RaisePropertyChanged("read");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool suggestModify {
            get {
                return this.suggestModifyField;
            }
            set {
                if ((this.suggestModifyField.Equals(value) != true)) {
                    this.suggestModifyField = value;
                    this.RaisePropertyChanged("suggestModify");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="permissionReference.Ipermission")]
    public interface Ipermission {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ipermission/getPermissionString", ReplyAction="http://tempuri.org/Ipermission/getPermissionStringResponse")]
        courseMachineUi.permissionReference.permissionClass getPermissionString(string courseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ipermission/getPermissionString", ReplyAction="http://tempuri.org/Ipermission/getPermissionStringResponse")]
        System.Threading.Tasks.Task<courseMachineUi.permissionReference.permissionClass> getPermissionStringAsync(string courseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ipermission/getPermission", ReplyAction="http://tempuri.org/Ipermission/getPermissionResponse")]
        courseMachineUi.permissionReference.permissionClass getPermission(System.Guid courseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ipermission/getPermission", ReplyAction="http://tempuri.org/Ipermission/getPermissionResponse")]
        System.Threading.Tasks.Task<courseMachineUi.permissionReference.permissionClass> getPermissionAsync(System.Guid courseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ipermission/createPermissionString", ReplyAction="http://tempuri.org/Ipermission/createPermissionStringResponse")]
        string createPermissionString(string courseId, string creator, string name, courseMachineUi.permissionReference.permissionType[] permissions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ipermission/createPermissionString", ReplyAction="http://tempuri.org/Ipermission/createPermissionStringResponse")]
        System.Threading.Tasks.Task<string> createPermissionStringAsync(string courseId, string creator, string name, courseMachineUi.permissionReference.permissionType[] permissions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ipermission/createPermission", ReplyAction="http://tempuri.org/Ipermission/createPermissionResponse")]
        string createPermission(System.Guid courseId, System.Guid creator, string name, courseMachineUi.permissionReference.permissionType[] permissions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ipermission/createPermission", ReplyAction="http://tempuri.org/Ipermission/createPermissionResponse")]
        System.Threading.Tasks.Task<string> createPermissionAsync(System.Guid courseId, System.Guid creator, string name, courseMachineUi.permissionReference.permissionType[] permissions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ipermission/deletePermissionString", ReplyAction="http://tempuri.org/Ipermission/deletePermissionStringResponse")]
        string deletePermissionString();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ipermission/deletePermissionString", ReplyAction="http://tempuri.org/Ipermission/deletePermissionStringResponse")]
        System.Threading.Tasks.Task<string> deletePermissionStringAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ipermission/deletePermission", ReplyAction="http://tempuri.org/Ipermission/deletePermissionResponse")]
        string deletePermission();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ipermission/deletePermission", ReplyAction="http://tempuri.org/Ipermission/deletePermissionResponse")]
        System.Threading.Tasks.Task<string> deletePermissionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ipermission/setUserPermissionString", ReplyAction="http://tempuri.org/Ipermission/setUserPermissionStringResponse")]
        string setUserPermissionString();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ipermission/setUserPermissionString", ReplyAction="http://tempuri.org/Ipermission/setUserPermissionStringResponse")]
        System.Threading.Tasks.Task<string> setUserPermissionStringAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ipermission/setUserPermission", ReplyAction="http://tempuri.org/Ipermission/setUserPermissionResponse")]
        string setUserPermission();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ipermission/setUserPermission", ReplyAction="http://tempuri.org/Ipermission/setUserPermissionResponse")]
        System.Threading.Tasks.Task<string> setUserPermissionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ipermission/deleteUserPermissionString", ReplyAction="http://tempuri.org/Ipermission/deleteUserPermissionStringResponse")]
        string deleteUserPermissionString();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ipermission/deleteUserPermissionString", ReplyAction="http://tempuri.org/Ipermission/deleteUserPermissionStringResponse")]
        System.Threading.Tasks.Task<string> deleteUserPermissionStringAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ipermission/deleteUserPermission", ReplyAction="http://tempuri.org/Ipermission/deleteUserPermissionResponse")]
        string deleteUserPermission();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ipermission/deleteUserPermission", ReplyAction="http://tempuri.org/Ipermission/deleteUserPermissionResponse")]
        System.Threading.Tasks.Task<string> deleteUserPermissionAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IpermissionChannel : courseMachineUi.permissionReference.Ipermission, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IpermissionClient : System.ServiceModel.ClientBase<courseMachineUi.permissionReference.Ipermission>, courseMachineUi.permissionReference.Ipermission {
        
        public IpermissionClient() {
        }
        
        public IpermissionClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IpermissionClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IpermissionClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IpermissionClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public courseMachineUi.permissionReference.permissionClass getPermissionString(string courseId) {
            return base.Channel.getPermissionString(courseId);
        }
        
        public System.Threading.Tasks.Task<courseMachineUi.permissionReference.permissionClass> getPermissionStringAsync(string courseId) {
            return base.Channel.getPermissionStringAsync(courseId);
        }
        
        public courseMachineUi.permissionReference.permissionClass getPermission(System.Guid courseId) {
            return base.Channel.getPermission(courseId);
        }
        
        public System.Threading.Tasks.Task<courseMachineUi.permissionReference.permissionClass> getPermissionAsync(System.Guid courseId) {
            return base.Channel.getPermissionAsync(courseId);
        }
        
        public string createPermissionString(string courseId, string creator, string name, courseMachineUi.permissionReference.permissionType[] permissions) {
            return base.Channel.createPermissionString(courseId, creator, name, permissions);
        }
        
        public System.Threading.Tasks.Task<string> createPermissionStringAsync(string courseId, string creator, string name, courseMachineUi.permissionReference.permissionType[] permissions) {
            return base.Channel.createPermissionStringAsync(courseId, creator, name, permissions);
        }
        
        public string createPermission(System.Guid courseId, System.Guid creator, string name, courseMachineUi.permissionReference.permissionType[] permissions) {
            return base.Channel.createPermission(courseId, creator, name, permissions);
        }
        
        public System.Threading.Tasks.Task<string> createPermissionAsync(System.Guid courseId, System.Guid creator, string name, courseMachineUi.permissionReference.permissionType[] permissions) {
            return base.Channel.createPermissionAsync(courseId, creator, name, permissions);
        }
        
        public string deletePermissionString() {
            return base.Channel.deletePermissionString();
        }
        
        public System.Threading.Tasks.Task<string> deletePermissionStringAsync() {
            return base.Channel.deletePermissionStringAsync();
        }
        
        public string deletePermission() {
            return base.Channel.deletePermission();
        }
        
        public System.Threading.Tasks.Task<string> deletePermissionAsync() {
            return base.Channel.deletePermissionAsync();
        }
        
        public string setUserPermissionString() {
            return base.Channel.setUserPermissionString();
        }
        
        public System.Threading.Tasks.Task<string> setUserPermissionStringAsync() {
            return base.Channel.setUserPermissionStringAsync();
        }
        
        public string setUserPermission() {
            return base.Channel.setUserPermission();
        }
        
        public System.Threading.Tasks.Task<string> setUserPermissionAsync() {
            return base.Channel.setUserPermissionAsync();
        }
        
        public string deleteUserPermissionString() {
            return base.Channel.deleteUserPermissionString();
        }
        
        public System.Threading.Tasks.Task<string> deleteUserPermissionStringAsync() {
            return base.Channel.deleteUserPermissionStringAsync();
        }
        
        public string deleteUserPermission() {
            return base.Channel.deleteUserPermission();
        }
        
        public System.Threading.Tasks.Task<string> deleteUserPermissionAsync() {
            return base.Channel.deleteUserPermissionAsync();
        }
    }
}
